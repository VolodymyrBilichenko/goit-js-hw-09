{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,yBACjCE,QAASH,SAASC,cAAc,wBAChCG,UAAWJ,SAASC,cAAc,0BAClCI,QAASL,SAASC,cAAc,0BA8BlC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAElCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAErBA,E,IAnCPV,EAAKO,QAAQU,iBAAiB,SAG9B,SAAkBC,GAChBA,EAAIC,iBAKJ,IAHA,IAAIC,EAAQC,OAAOrB,EAAKI,SAASkB,OAC3BC,EAAOF,OAAOrB,EAAKK,QAAQiB,OAC3BE,EAASH,OAAOrB,EAAKM,UAAUgB,OAC5BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlCjB,EAFeiB,EAAI,EAEKL,GACdM,MAAF,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAuCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEzEU,GAASG,C,CAGXvB,EAAKC,KAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInp: document.querySelector('input[name = \"delay\"]'),\n  stepInp: document.querySelector('input[name = \"step\"]'),\n  amountInp: document.querySelector('input[name = \"amount\"]'),\n  sybmBtn: document.querySelector('button[type=\"submit\"]'),\n}\n\n\nrefs.sybmBtn.addEventListener('click', onSubmit);\n\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(refs.delayInp.value);\n  const step = Number(refs.stepInp.value);\n  const amount = Number(refs.amountInp.value);\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    \n    createPromise(position, delay) // визиваю \n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step\n  }\n\n  refs.form.reset(); // ресет форми після закінчення виконання \n}\n\n\nfunction createPromise(position, delay) { // генерує проміси \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInp","stepInp","amountInp","sybmBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning","reset"],"version":3,"file":"03-promises.e2150301.js.map"}