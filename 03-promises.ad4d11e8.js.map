{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,wBACtCI,aAAcL,SAASC,cAAc,0BAMvC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbV,EAAKO,aAAaU,iBAAiB,SAiBnC,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOrB,EAAKI,aAAakB,OACrC,MAAMC,EAAOF,OAAOrB,EAAKK,YAAYiB,OAC/BE,EAASH,OAAOrB,EAAKM,cAAcgB,OAEzC,IAAI,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAE,CAGhCjB,EAFeiB,EAAI,EAEKL,GACrBM,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAEvEU,GAASG,C,CAObvB,EAAKC,OAAO+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('input[name=\"amount\"]'),\n  btnSumbmitEl: document.querySelector('button[type=\"submit\"]')\n};\n\nrefs.btnSumbmitEl.addEventListener('click', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n};\n\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n\n  let delay = Number(refs.inputDelayEl.value);\n  const step = Number(refs.inputStepEl.value);\n  const amount = Number(refs.inputAmountEl.value);\n  \n  for(let i = 0; i < amount; i += 1){\n    let position = i + 1; \n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      delay += step\n  };\n  formReset();\n};\n\n\nfunction formReset(){\n  refs.formEl.reset();\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","btnSumbmitEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.ad4d11e8.js.map"}