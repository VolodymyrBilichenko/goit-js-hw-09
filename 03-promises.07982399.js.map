{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,wBACtCI,aAAcL,SAASC,cAAc,0BAMvC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPV,EAAKO,aAAaU,iBAAiB,SAiBnC,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOrB,EAAKI,aAAakB,OAC/BC,EAAOF,OAAOrB,EAAKK,YAAYiB,OAC/BE,EAASH,OAAOrB,EAAKM,cAAcgB,OAEjCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAE,CAGhCjB,EAFeiB,EAAI,EAEKL,GACrBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAErEU,GAASG,C,CAObvB,EAAKC,OAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  inputDelayEl: document.querySelector('input[name=\"delay\"]'),\n  inputStepEl: document.querySelector('input[name=\"step\"]'),\n  inputAmountEl: document.querySelector('input[name=\"amount\"]'),\n  btnSumbmitEl: document.querySelector('button[type=\"submit\"]')\n};\n\nrefs.btnSumbmitEl.addEventListener('click', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n};\n\n\nfunction onFormSubmit(event){\n  event.preventDefault();\n\n  let delay = Number(refs.inputDelayEl.value);\n  const step = Number(refs.inputStepEl.value);\n  const amount = Number(refs.inputAmountEl.value);\n  \n  for(let i = 0; i < amount; i += 1){\n    let position = i + 1; \n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      delay += step\n  };\n  formReset();\n};\n\n\nfunction formReset(){\n  refs.formEl.reset();\n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","btnSumbmitEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.07982399.js.map"}